
# ===============================
# DATABASE
# ===============================

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/local_authorization_resource_server_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=qwerty

# ===============================
# JPA / HIBERNATE
# ===============================

spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


logging.level.root=WARN


#security.oauth2.client.client-id=first-client
#security.oauth2.client.client-secret=noonewilleverguess

server.port=8443
server.ssl.enabled=true
server.ssl.key-alias=tomcat
server.ssl.key-password=1qaz2wsx
server.ssl.key-store=classpath:localhost-rsa2021.jks
#server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.key-store-password=qwerty


logger.level.org.springframework.security=trace

# Parameters of keystore to be forwarded to the authorization server in AuthorizationServerConfig class:
spring.security.oauth2.authenticationserver.jwt.jwk-set-key-store=authentication-server-rsa.jks
spring.security.oauth2.authenticationserver.jwt.jwk-set-key-storepass=qwerty
spring.security.oauth2.authenticationserver.jwt.jwk-set-key-alias=bael-oauth-jwt

# Defined in AuthorizationServerConfig.jwkSet in order to be present in the JwkSetRestController.keys response as a key
# value for the resource server requests
spring.security.oauth2.authenticationserver.jwt.jwk-set-key-id=bael-key-id

# https://github.com/okta/samples-java-spring/issues/48  - problem with  No qualifying bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder'
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://localhost:8443/oauth/jwks.json

# Spring security doesn't create JwtDecoder Bean for this property (apart form the previous property).
# It was created in local.authorization.resource.server.security.SecurityConfigRest.defaultPublicRsaFromTokenKey
# Here is a description that this property isn't fully supported:
# https://stackoverflow.com/questions/47711295/whats-the-replacement-for-jwt-key-uri-in-spring-boot-2
#security.oauth2.resource.jwt.key-uri=https://localhost:8443/oauth/token_key
# this property makes no sense as this endpoint (with default public RSA key) can't be requested on the server startup
# this property will be defined instead:
security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhUqs2aO8nuekiziB3VKNKqzdCrZ9dD/G3rsrz/iA6W0ZzZ+2tZqcgtMRVC5wUBZTTc5vg3mbnr/SmcQh1CsyFjZ9Mc3+NaceNB4/evXIl67IK5Gf6Pjhlq8kYtezaE/ykBAT5asCSbHHSIzNr9TYFg9VME42f/nrXhjcdqvOq57lek/NA1X0BwMN7wVvDtuuSmpBY8cXp1H4VOdZ373VWpA1RWIUNJ7zLn1e6QPZ+3ovu4Ivc9m9fWDKjYUpqV86QOIjOrzIkbUBwyf+UBz0iv3+Frm5dEisPWWpv44P+me8t03Q2iAc90qOIuAVifG9gstRimycSC6xMMIaGH5ogQIDAQAB\n-----END PUBLIC KEY-----

#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/oauth/jwks.json
# security.oauth2.resource.jwk.key-set-uri = spring.security.oauth2.resourceserver.jwt.jwk-set-uri
# ( https://www.baeldung.com/spring-security-oauth2-jws-jwk  |||  3.2. Configuring the Resource Server)

# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration